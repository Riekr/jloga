{
  "version": 3,
  "sources": ["wasm-stub:../../dist/pkg/web/perspective-server.wasm", "worker-stub:../../src/ts/perspective-server.worker.js", "../../src/ts/browser.ts", "../../src/ts/perspective.ts"],
  "sourcesContent": ["\n                import wasm from \"../../dist/pkg/web/perspective-server.wasm\";\n                export default function() { \n                    return fetch(new URL(__PSP_INLINE_WASM__7873665105597023__(wasm), import.meta.url));\n                };\n            ", "\n                        import worker from \"../../src/ts/perspective-server.worker.js\";\n                        function make_host(a, b) {\n                            function addEventListener(type, callback) {\n                                a.push(callback);\n                            }\n\n                            function removeEventListener(callback) {\n                                const idx = a.indexOf(callback);\n                                if (idx > -1) {\n                                    a.splice(idx, 1);\n                                }\n                            }\n\n                            function postMessage(msg) {\n                                for (const listener of b) {\n                                    listener({data: msg});\n                                }\n                            }\n\n                            return {\n                                addEventListener,\n                                removeEventListener,\n                                postMessage,\n                                location: {href: \"\"}\n                            }\n                        }\n\n                        function run_single_threaded(code) {\n                            console.error(\"Running perspective in single-threaded mode\");\n                            let f = Function(\"const self = arguments[0];\" + code);\n                            const workers = [];\n                            const mains = [];\n                            f(make_host(workers, mains));\n                            return make_host(mains, workers);\n                        }\n\n                        export const initialize = async function () {\n                            try {\n                                if (window.location.protocol.startsWith(\"file\")) {\n                                    console.warn(\"file:// protocol does not support Web Workers\");\n                                    return run_single_threaded(worker);\n                                } else {\n                                    const blob = new Blob([worker], {type: 'application/javascript'});\n                                    const url = URL.createObjectURL(blob);\n                                    return new Worker(url, {type: \"module\"});\n                                }\n                            } catch (e) {\n                                console.error(\"Error instantiating engine\", e);\n                            }\n                        };\n\n                        export default initialize;\n                    ", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\n// @ts-ignore\nimport perspective_wasm from \"../../dist/pkg/web/perspective-server.wasm\";\n\n// @ts-ignore\nimport perspective_wasm_worker from \"../../src/ts/perspective-server.worker.js\";\n\nimport type * as psp from \"../../dist/pkg/perspective-js.d.ts\";\n\nfunction invert_promise<T>(): [(t: T) => void, Promise<T>] {\n    let sender;\n    let receiver: Promise<T> = new Promise((x) => {\n        sender = x;\n    });\n\n    return [sender as unknown as (t: T) => void, receiver];\n}\n\nasync function _init(ws: Worker, wasm: ArrayBuffer) {\n    const [sender, receiver] = invert_promise();\n    ws.addEventListener(\"message\", function listener(resp) {\n        ws.removeEventListener(\"message\", listener);\n        sender(null);\n    });\n\n    ws.postMessage({ cmd: \"init\", args: [wasm] }, { transfer: [wasm] });\n    await receiver;\n}\n\n/**\n * Create a new client connected exclusively to a new Web Worker instance of\n * the Perspective engine.\n * @param module\n * @returns\n */\nexport async function worker(module: Promise<typeof psp>) {\n    const [wasm, webworker]: [ArrayBuffer, Worker] = await Promise.all([\n        perspective_wasm().then((x: Response | ArrayBuffer) => {\n            if (x instanceof Response) {\n                return x.arrayBuffer();\n            } else {\n                return x.slice(0);\n            }\n        }),\n        perspective_wasm_worker(),\n    ]);\n\n    const { Client } = await module;\n    const client = new Client(\n        (proto: Uint8Array) => {\n            const f = proto.slice().buffer;\n            webworker.postMessage(f, { transfer: [f] });\n        },\n        () => {\n            console.debug(\"Closing WebWorker\");\n            webworker.terminate();\n        }\n    );\n\n    await _init(webworker, wasm);\n    webworker.addEventListener(\"message\", (json: MessageEvent<Uint8Array>) => {\n        client.handle_response(json.data);\n    });\n\n    await client.init();\n    return client;\n}\n\n/**\n * Create a new client connected via WebSocket to a server implemnting the\n * Perspective Protocol.\n * @param module\n * @param url\n * @returns\n */\nexport async function websocket(\n    module: Promise<typeof psp>,\n    url: string | URL\n) {\n    const ws = new WebSocket(url);\n    let [sender, receiver] = invert_promise();\n    ws.onopen = sender;\n    ws.binaryType = \"arraybuffer\";\n    await receiver;\n    const { Client } = await module;\n    const client = new Client(\n        (proto: Uint8Array) => {\n            const buffer = proto.slice().buffer;\n            ws.send(buffer);\n        },\n        () => {\n            console.debug(\"Closing WebSocket\");\n            ws.close();\n        }\n    );\n\n    ws.onmessage = (msg) => {\n        client.handle_response(msg.data);\n    };\n\n    await client.init();\n    return client;\n}\n\nexport default { websocket, worker };\n", "// \u250F\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\n// \u2503 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588       \u2588      \u2588      \u2588      \u2588      \u2588 \u2588\u2584  \u2580\u2588\u2588\u2588 \u2588       \u2503\n// \u2503 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2584\u2584\u2584\u2584\u2584 \u2584\u2584\u2584\u2584\u2584\u2588  \u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580 \u2588 \u2580\u2580\u2580\u2580\u2580\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2584  \u2580\u2588 \u2588 \u2580\u2580\u2580\u2580\u2580 \u2503\n// \u2503 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2580\u2580\u2580\u2580 \u2588\u2580\u2588\u2588\u2580\u2580 \u2584\u2584\u2584\u2584\u2584 \u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2584\u2584\u2584\u2584\u2584\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2584   \u2588 \u2584\u2584\u2584\u2584\u2584 \u2503\n// \u2503 \u2588      \u2588\u2588\u2588\u2588\u2588\u2588 \u2588  \u2580\u2588\u2584       \u2588 \u2588\u2588\u2588\u2588\u2588\u2588      \u2588      \u2588\u2588\u2588\u258C\u2590\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584 \u2588       \u2503\n// \u2523\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u252B\n// \u2503 Copyright (c) 2017, the Perspective Authors.                              \u2503\n// \u2503 \u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C\u254C \u2503\n// \u2503 This file is part of the Perspective library, distributed under the terms \u2503\n// \u2503 of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). \u2503\n// \u2517\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u251B\n\nimport * as api from \"./browser.ts\";\nexport type * from \"../../dist/pkg/perspective-js.d.ts\";\n\nimport type * as psp from \"../../dist/pkg/perspective-js.d.ts\";\n\ntype WasmElement = {\n    __wasm_module__: Promise<typeof psp>;\n};\n\nexport async function compile_perspective() {\n    let elem = customElements.get(\n        \"perspective-viewer\"\n    ) as unknown as WasmElement;\n    if (!elem) {\n        console.warn(\"No `<perspective-viewer>` Custom Element found, waiting\");\n        await customElements.whenDefined(\"perspective-viewer\");\n        elem = customElements.get(\n            \"perspective-viewer\"\n        ) as unknown as WasmElement;\n    }\n\n    return elem.__wasm_module__;\n}\n\nexport async function websocket(url: string | URL) {\n    const wasm_module = compile_perspective();\n    return await api.websocket(wasm_module, url);\n}\n\nexport async function worker() {\n    const wasm_module = compile_perspective();\n    return await api.worker(wasm_module);\n}\n\nexport default { websocket, worker };\n"],
  "mappings": "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",
  "names": ["perspective_server_default", "make_host", "a", "b", "addEventListener", "type", "callback", "removeEventListener", "idx", "postMessage", "msg", "listener", "run_single_threaded", "code", "f", "workers", "mains", "initialize", "perspective_server_default", "blob", "url", "perspective_server_worker_default", "invert_promise", "sender", "receiver", "x", "_init", "ws", "wasm", "listener", "resp", "worker", "module", "webworker", "perspective_server_default", "perspective_server_worker_default", "Client", "client", "proto", "f", "json", "websocket", "url", "buffer", "msg", "compile_perspective", "elem", "websocket", "url", "wasm_module", "worker", "perspective_default"]
}
