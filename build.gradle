plugins {
	id 'java'
	id 'edu.sc.seis.launch4j' version '2.5.1'
	id 'de.undercouch.download' version '5.0.2'
}

repositories {
	mavenCentral()
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

/* Would be nice to use javafx for finos perspective integration but as of now webassembly and workers are not supported
   keeping definitions here for further reference */
//	id "org.openjfx.javafxplugin" version "0.0.12"
//javafx {
////	version = '17.0.0.1'
//	version = '19-ea+3'
//	modules = ['javafx.swing', 'javafx.web']
//}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
			srcDir 'src/main/html'
		}
	}
}

compileJava {
	options.warnings = true
	options.deprecation = true
	options.debug = true
	options.compilerArgs = ["-Xlint:unchecked"]
}

dependencies {
	// flatlaf 2.2 has troubles with JSplitPane programmatic divider positioning
	implementation 'com.formdev:flatlaf:2.1'
	implementation 'com.formdev:flatlaf-intellij-themes:2.1'
	implementation 'org.drjekyll:fontchooser:2.4'
	implementation 'org.nanohttpd:nanohttpd-websocket:2.3.1'
	implementation 'com.google.code.gson:gson:2.9.0'
	testImplementation 'junit:junit:4.13.2'
	compileOnly 'org.jetbrains:annotations:23.0.0'
}

def myVersion = '0.2.3'

jar {
	manifest {
		attributes(
				"Implementation-Version": myVersion,
				"Main-Class": 'org.riekr.jloga.Main'
		)
	}
}

tasks.register('fatJar', Jar) {
	group "build"
	manifest.from jar.manifest
	archiveClassifier = 'all'
	from sourceSets.main.output
	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
	}
}

launch4j {
	// https://github.com/TheBoegl/gradle-launch4j
	mainClassName = 'org.riekr.jloga.Main'
	// convert icon.png -resize 256x256 -channel rgb -negate icon.ico
	icon = "${projectDir}/src/main/resources/org/riekr/jloga/icon.ico"
	jarTask = fatJar
	copyConfigurable = []
	version = myVersion
	textVersion = 'v' + myVersion
	copyright 'https://github.com/Riekr/jloga'
	supportUrl 'https://github.com/Riekr/jloga/issues'
	downloadUrl 'https://adoptium.net/download'
}

task updatePerspective {
	// https://github.com/michel-kraemer/gradle-download-task
	doLast {
		def repo = "https://cdn.jsdelivr.net/npm/@finos"
		def local = "src/main/html/org/riekr/jloga/http/perspective"
		download.run { src "${repo}/perspective"; dest "${local}/perspective.js" }
		download.run { src "${repo}/perspective-viewer"; dest "${local}/perspective-viewer.js" }
		download.run { src "${repo}/perspective-viewer-datagrid"; dest "${local}/perspective-viewer-datagrid.js" }
		download.run { src "${repo}/perspective-viewer-d3fc"; dest "${local}/perspective-viewer-d3fc.js" }
		// you can set "wgetExec" in "gradle.properties" file in the same folder of this one (useful for cygwin)
		delete(file("${local}/res"))
		def wget = project.hasProperty('wgetExec') ? wgetExec : 'wget'
		exec {
			workingDir "${local}"
			executable wget
			args(['-q',
			      '--page-requisites',
			      '--convert-links',
			      '-e', 'robots=off',
			      '--span-hosts',
			      '--restrict-file-names=windows',
			      '--directory-prefix=res',
			      '--adjust-extension',
			      "${repo}/perspective-viewer/dist/css/themes.css"
			])
		}
	}
}

artifacts {
	archives fatJar
}